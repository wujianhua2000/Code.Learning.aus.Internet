
        /// <summary>
        /// Apply a style to a paragraph.
        /// </summary>
        /// <param name="mainPart"></param>
        /// <param name="styleid"></param>
        /// <param name="stylename"></param>
        /// <param name="styleRunProperties"></param>
        public static void AddStyleToDoc( MainDocumentPart mainPart, string styleid, string stylename, StyleRunProperties styleRunProperties )
        {
            // Get the Styles part for this document.
            StyleDefinitionsPart part = mainPart.StyleDefinitionsPart;

            // If the Styles part does not exist, add it and then add the style.
            if ( part == null )
            {
                part = AddStylesPartToPackage( mainPart );
                AddNewStyle( part, styleid, stylename, styleRunProperties );
            }
            else
            {
                // If the style is not in the document, add it.
                if ( IsStyleIdInDocument( mainPart, styleid ) != true )
                {
                    // No match on styleid, so let'stilist try style name.
                    string styleidFromName = GetStyleIdFromStyleName( mainPart, stylename );
                    
                    if ( styleidFromName == null )
                        AddNewStyle( part, styleid, stylename, styleRunProperties );
                    else
                        styleid = styleidFromName;
                }
            }

            return;
        }

        //.....................................................................
        /// <summary>
        /// Add a StylesDefinitionsPart to the document.  Returns a reference to it.
        /// </summary>
        /// <param name="mainPart"></param>
        /// <returns></returns>
        public static StyleDefinitionsPart AddStylesPartToPackage( MainDocumentPart mainPart )
        {
            StyleDefinitionsPart part;
            
            part = mainPart.AddNewPart<StyleDefinitionsPart>( );
            
            DocumentFormat.OpenXml.Wordprocessing.Styles root = new DocumentFormat.OpenXml.Wordprocessing.Styles( );
            
            root.Save( part );

            return part;
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="mainPart"></param>
        /// <param name="styleid"></param>
        /// <returns></returns>
        public static bool IsStyleIdInDocument( MainDocumentPart mainPart, string styleid )
        {
            // Get access to the Styles element for this document.
            DocumentFormat.OpenXml.Wordprocessing.Styles stilist = mainPart.StyleDefinitionsPart.Styles;

            // Check that there are styles and how many.
            int n = stilist.Elements<DocumentFormat.OpenXml.Wordprocessing.Style>( ).Count( );

            if ( n == 0 ) return false;

            // Look for a match on styleid.
            DocumentFormat.OpenXml.Wordprocessing.Style style
                    = stilist.Elements<DocumentFormat
                             .OpenXml
                             .Wordprocessing.Style>( )
                             .Where( st => ( st.StyleId == styleid ) && ( st.Type == StyleValues.Paragraph ) )
                             .FirstOrDefault( );

            if ( style == null ) return false;

            return true;
        }

        //.....................................................................
        /// <summary>
        /// Create a new style with the specified styleid and stylename and add it to the specified style definitions part.
        /// </summary>
        /// <param name="styleDefinitionsPart"></param>
        /// <param name="styleid"></param>
        /// <param name="stylename"></param>
        /// <param name="styleRunProperties"></param>
        private static void AddNewStyle( StyleDefinitionsPart styleDefinitionsPart, string styleid, string stylename, StyleRunProperties styleRunProperties )
        {
            // Get access to the root element of the styles part.
            DocumentFormat.OpenXml.Wordprocessing.Styles styles = styleDefinitionsPart.Styles;

            // Create a new paragraph style and specify some of the properties.
            DocumentFormat.OpenXml.Wordprocessing.Style style = new DocumentFormat.OpenXml.Wordprocessing.Style( )
            {
                Type = StyleValues.Paragraph,
                StyleId = styleid,
                CustomStyle = true
            };
            style.Append( new StyleName( ) { Val = stylename } );
            style.Append( new BasedOn( ) { Val = "Normal" } );
            style.Append( new NextParagraphStyle( ) { Val = "Normal" } );
            style.Append( new UIPriority( ) { Val = 900 } );

            // Create the StyleRunProperties object and specify some of the run properties.


            // Add the run properties to the style.
            // --- Here we use the OuterXml. If you are using the same var twice, you will get an error. So to be sure just insert the xml and you will get through the error.
            //style.Append(styleRunProperties.OuterXml);

            // Add the style to the styles part.
            styles.Append( style );

            return;
        }

        //.....................................................................
        //  And then to add and use your new style :

        //// Heading 1
        //StyleRunProperties styleRunPropertiesH1 = new StyleRunProperties();  
        //Color color1 = new Color() { Val = "2F5496" };  
        //// Specify a 16 point size. 16x2 because it’stilist half-point size
        //DocumentFormat.OpenXml.Wordprocessing.FontSize fontSize1 = new DocumentFormat.OpenXml.Wordprocessing.FontSize();  
        //fontSize1.Val = new StringValue("32");  

        //styleRunPropertiesH1.Append(color1);  
        //styleRunPropertiesH1.Append(fontSize1);  
        //// Check above at the begining of the word creation to check where mainPart come from
        //AddStyleToDoc(mainPart, "heading1", "heading 1", styleRunPropertiesH1);

        //// Heading 2
        //StyleRunProperties styleRunPropertiesH2 = new StyleRunProperties();  
        //Color color2 = new Color() { Val = "2F5496" };  
        //// Specify a 13 point size. 16x2 because it’stilist half-point size
        //DocumentFormat.OpenXml.Wordprocessing.FontSize fontSize1 = new DocumentFormat.OpenXml.Wordprocessing.FontSize();  
        //fontSize1.Val = new StringValue("26");  

        //styleRunPropertiesH1.Append(color1);  
        //styleRunPropertiesH1.Append(fontSize1);  
        //AddStyleToDoc(mainPart, "heading2", "heading 2", styleRunPropertiesH1);

        //// Create your heading1 into docx
        //Paragraph pH1 = new Paragraph();  
        //ParagraphProperties ppH1 = new ParagraphProperties();  
        //ppH1.ParagraphStyleId = new ParagraphStyleId() { Val = "heading1" };  
        //ppH1.SpacingBetweenLines = new SpacingBetweenLines() { After = "0" };  
        //pH1.Append(ppH1);  
        //// Run Heading1
        //Run rH1 = new Run();  
        //Text tH1 = new Text("First Heading"){ Space = SpaceProcessingModeValues.Preserve };  
        //rH1.Append(tH1);  
        //pH1.Append(rH1);  
        //// Add your heading to docx body
        //docBody.Append(pH1);

        //// Create your heading2 into docx
        //Paragraph pH2 = new Paragraph();  
        //ParagraphProperties ppH2 = new ParagraphProperties();  
        //ppH2.ParagraphStyleId = new ParagraphStyleId() { Val = "heading2" };  
        //ppH2.SpacingBetweenLines = new SpacingBetweenLines() { After = "0" };  
        //pH2.Append(ppH2);  
        //// Run Heading2
        //Run rH2 = new Run();  
        //Text tH2 = new Text("Second Heading"){ Space = SpaceProcessingModeValues.Preserve };  
        //rH2.Append(tH2);  
        //pH2.Append(rH2);  
        //// Add your heading2 to docx body
        //docBody.Append(pH2);  

